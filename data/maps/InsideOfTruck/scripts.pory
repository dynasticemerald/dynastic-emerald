raw`
InsideOfTruck_MapScripts::
	map_script MAP_SCRIPT_ON_LOAD, InsideOfTruck_OnLoad
	map_script MAP_SCRIPT_ON_FRAME_TABLE, InsideOfTruck_OnFrame
	map_script MAP_SCRIPT_ON_RESUME, InsideOfTruck_OnResume
	.byte 0

InsideOfTruck_OnLoad:
	setmetatile 4, 1, METATILE_InsideOfTruck_ExitLight_Top, FALSE
	setmetatile 4, 2, METATILE_InsideOfTruck_ExitLight_Mid, FALSE
	setmetatile 4, 3, METATILE_InsideOfTruck_ExitLight_Bottom, FALSE
	end

InsideOfTruck_OnFrame:
	map_script_2 VAR_REGION_CHECK, 0, MinimalGrindingAsk
	.2byte 0

InsideOfTruck_OnResume:
	setstepcallback STEP_CB_TRUCK
	end

InsideOfTruck_EventScript_SetIntroFlags::
	lockall
	setflag FLAG_HIDE_MAP_NAME_POPUP
	checkplayergender
	goto_if_eq VAR_RESULT, MALE, InsideOfTruck_EventScript_SetIntroFlagsMale
	goto_if_eq VAR_RESULT, FEMALE, InsideOfTruck_EventScript_SetIntroFlagsFemale
	end

InsideOfTruck_EventScript_SetIntroFlagsMale::
	setrespawn HEAL_LOCATION_LITTLEROOT_TOWN_BRENDANS_HOUSE_2F
	setvar VAR_LITTLEROOT_INTRO_STATE, 1
	setflag FLAG_HIDE_LITTLEROOT_TOWN_MAYS_HOUSE_MOM
	setflag FLAG_HIDE_LITTLEROOT_TOWN_MAYS_HOUSE_TRUCK
	setflag FLAG_HIDE_LITTLEROOT_TOWN_BRENDANS_HOUSE_RIVAL_MOM
	setflag FLAG_HIDE_LITTLEROOT_TOWN_BRENDANS_HOUSE_RIVAL_SIBLING
	setflag FLAG_HIDE_LITTLEROOT_TOWN_BRENDANS_HOUSE_2F_POKE_BALL
	setvar VAR_LITTLEROOT_HOUSES_STATE_BRENDAN, 1
	setdynamicwarp MAP_LITTLEROOT_TOWN, 3, 10
	releaseall
	end

InsideOfTruck_EventScript_SetIntroFlagsFemale::
	setrespawn HEAL_LOCATION_LITTLEROOT_TOWN_MAYS_HOUSE_2F
	setvar VAR_LITTLEROOT_INTRO_STATE, 2
	setflag FLAG_HIDE_LITTLEROOT_TOWN_BRENDANS_HOUSE_MOM
	setflag FLAG_HIDE_LITTLEROOT_TOWN_BRENDANS_HOUSE_TRUCK
	setflag FLAG_HIDE_LITTLEROOT_TOWN_MAYS_HOUSE_RIVAL_MOM
	setflag FLAG_HIDE_LITTLEROOT_TOWN_MAYS_HOUSE_RIVAL_SIBLING
	setflag FLAG_HIDE_LITTLEROOT_TOWN_MAYS_HOUSE_2F_POKE_BALL
	setvar VAR_LITTLEROOT_HOUSES_STATE_MAY, 1
	setdynamicwarp MAP_LITTLEROOT_TOWN, 12, 10
	releaseall
	end

InsideOfTruck_EventScript_MovingBox::
	msgbox InsideOfTruck_Text_BoxPrintedWithMonLogo, MSGBOX_SIGN
	end

InsideOfTruck_Text_BoxPrintedWithMonLogo:
	.string "The box is printed with a POKéMON logo.\p"
	.string "It's a POKéMON brand moving and\n"
	.string "delivery service.$"
`

script MinimalGrindingAsk { //Minimal Grinding Check
	lock
	fadescreen(FADE_TO_BLACK)
	msgbox(format("Please stop smashing {A_BUTTON} and properly answer the following questions."), MSGBOX_DEFAULT)
	msgbox(format("Would you like to play Dynastic Emerald with Minimal Grinding Mode enabled?"), MSGBOX_YESNO)	
	switch(var(VAR_RESULT))
	{
		case YES: setflag(FLAG_MINIMAL_GRINDING_MODE) fadescreen(FADE_FROM_BLACK) goto(RegionChoice) release end
		case NO: fadescreen(FADE_FROM_BLACK) goto(RegionChoice) release end
	}
}

script ModesCheck { //Modes Check.
	lock
	fadescreen(FADE_TO_BLACK)
	msgbox(format("Please stop smashing {A_BUTTON} and properly answer the following questions."), MSGBOX_DEFAULT)
	msgbox(format("Would you like to play Dynastic Emerald without any custom options?"), MSGBOX_YESNO)
	switch(var(VAR_RESULT))
	{
		case YES: setvar(VAR_MODES_CHECK, 1) message(format("Dynastic Emerald will be played without any custom options, Enjoy!")) waitmessage fadescreen(FADE_FROM_BLACK) release end
		case NO: goto(ModesCheck_Continue)
	}
}

script ModesCheck_Continue {
	closemessage
	message(format("Press {A_BUTTON} to select an Option."))
	waitmessage
	dynmultichoice(0,0,TRUE,4,0,DYN_MULTICHOICE_CB_NONE,"Modes","Misc","Cancel")	
	switch(var(VAR_RESULT)){
		case 0: //Modes
			message(format("Press {A_BUTTON} to select a mode\nPress {B_BUTTON} to exit Menu"))
			waitmessage
			dynmultichoice(0,0,TRUE,4,0,DYN_MULTICHOICE_CB_NONE,"Minimal Grinding","Cancel")	
	}
	end //Fail Save.
}

script WSwitch{
switch(var(VAR_RESULT)){
	case 0: //Minimal Grinding Mode.
		msgbox(ModesCheck_Text_MinimalGrinding, MSGBOX_YESNO)
		if(var(VAR_RESULT) == YES){
		setflag(FLAG_MINIMAL_GRINDING_MODE)
		setvar(VAR_MODES_CHECK, 1)
		goto(ModesCheck_Continue)
		} else {		
		goto(ModesCheck_Continue) }
	case 1: //Random Nicknames.
		msgbox(ModesCheck_Text_Test, MSGBOX_YESNO)
		if(var(VAR_RESULT) == YES){
		setflag(FLAG_RANDOM_NICKNAMES)
		setvar(VAR_MODES_CHECK, 1)
		goto(ModesCheck_Continue)
		} else {		
		goto(ModesCheck_Continue) }
	case 3: //Done.
		setvar(VAR_MODES_CHECK, 1)
		fadescreen(FADE_FROM_BLACK)
		release
		end
	}
}

script RegionChoice{
	lock
	fadescreen(FADE_TO_BLACK)
	message(format("Kaixer: Hello, {PLAYER}. Wich region would you like ur starter to be from?"))
	waitmessage
	dynmultichoice(0,0,FALSE,5,0,DYN_MULTICHOICE_CB_NONE, "Kanto", "Johto", "Hoenn", "Sinnoh", "Unova", "Kalos", "Alola", "Galar", "Paldea")
	switch(var(VAR_RESULT))
	{
		case 0: setvar(VAR_REGION_CHOICE, 0) msgbox(format("Ah the Kanto region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end
		case 1: setvar(VAR_REGION_CHOICE, 1) msgbox(format("Ah the Johto region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end
		case 2: setvar(VAR_REGION_CHOICE, 2) msgbox(format("Ah the Hoenn region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end
		case 3: setvar(VAR_REGION_CHOICE, 3) msgbox(format("Ah the Sinnoh region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end 
		case 4: setvar(VAR_REGION_CHOICE, 4) msgbox(format("Ah the Unova region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end 
		case 5: setvar(VAR_REGION_CHOICE, 5) msgbox(format("Ah the Kalos region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end
		case 6: setvar(VAR_REGION_CHOICE, 6) msgbox(format("Ah the Alola region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end
		case 7: setvar(VAR_REGION_CHOICE, 7) msgbox(format("Ah the Galar region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end 
		case 8: setvar(VAR_REGION_CHOICE, 8) msgbox(format("Ah the Paldea region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end
		case MULTI_B_PRESSED: default: setvar(VAR_REGION_CHOICE, 2) msgbox(format("Ah the Hoenn region?\n{PLAYER}, Good choice."), MSGBOX_DEFAULT) copyvar(VAR_REGION_CHOICE, VAR_RESULT) setvar(VAR_REGION_CHECK, 1) fadescreen(FADE_FROM_BLACK) release end
	}
}

text ModesCheck_Text_MinimalGrinding{
	"Minimal Grinding mode guarantees all\n"
	"Pokémon to have perfect IVs and EVs\l"
	"cannot be obtained.\p" 					 
	"This is mostly for people who dislike\n"
	"grinding for perfect IVs and training EVs.\p"
	"Do you want to turn on Minimal Grinding\n"
	"Mode?$"
}

text ModesCheck_Text_DoublesOnly{
	"Doubles Only Mode makes all wild and\n"
	"trainer battles forced double battles.\p"
	"This is mainly for people who like a\n"
	"challenge or for people who are more\l"
	"into VGC than Singles.\p"
	"Do you want to turn on Doubles Only\n"
	"Mode?$"
}

text ModesCheck_Text_Test{
	"Test."
}
